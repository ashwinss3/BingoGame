# Generated by Django 4.1.1 on 2022-11-17 20:05

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('end_time', models.DateTimeField()),
                ('size', models.PositiveSmallIntegerField(choices=[(3, 3), (4, 4), (5, 5)], default=5)),
            ],
            options={
                'db_table': 'game',
            },
        ),
        migrations.CreateModel(
            name='GameOptions',
            fields=[
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('short_description', models.TextField()),
                ('description', models.TextField()),
                ('condition', models.TextField()),
                ('is_done', models.BooleanField(default=False)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bingo.game')),
            ],
            options={
                'db_table': 'game_options',
            },
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('games', models.ManyToManyField(to='bingo.game')),
            ],
            options={
                'db_table': 'league',
            },
        ),
        migrations.CreateModel(
            name='UserGame',
            fields=[
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('score', models.PositiveSmallIntegerField(default=0)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bingo.game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_game',
            },
        ),
        migrations.CreateModel(
            name='UserGameChoices',
            fields=[
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('pos1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos1', to='bingo.gameoptions')),
                ('pos10', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos10', to='bingo.gameoptions')),
                ('pos11', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos11', to='bingo.gameoptions')),
                ('pos12', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos12', to='bingo.gameoptions')),
                ('pos13', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos13', to='bingo.gameoptions')),
                ('pos14', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos14', to='bingo.gameoptions')),
                ('pos15', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos15', to='bingo.gameoptions')),
                ('pos16', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos16', to='bingo.gameoptions')),
                ('pos17', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos17', to='bingo.gameoptions')),
                ('pos18', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos18', to='bingo.gameoptions')),
                ('pos19', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos19', to='bingo.gameoptions')),
                ('pos2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos2', to='bingo.gameoptions')),
                ('pos20', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos20', to='bingo.gameoptions')),
                ('pos21', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos21', to='bingo.gameoptions')),
                ('pos22', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos22', to='bingo.gameoptions')),
                ('pos23', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos23', to='bingo.gameoptions')),
                ('pos24', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos24', to='bingo.gameoptions')),
                ('pos25', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos25', to='bingo.gameoptions')),
                ('pos3', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos3', to='bingo.gameoptions')),
                ('pos4', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos4', to='bingo.gameoptions')),
                ('pos5', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos5', to='bingo.gameoptions')),
                ('pos6', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos6', to='bingo.gameoptions')),
                ('pos7', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos7', to='bingo.gameoptions')),
                ('pos8', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos8', to='bingo.gameoptions')),
                ('pos9', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pos9', to='bingo.gameoptions')),
                ('user_game', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='bingo.usergame')),
            ],
            options={
                'db_table': 'user_game_choices',
            },
        ),
        migrations.CreateModel(
            name='LeagueStandings',
            fields=[
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('score', models.PositiveSmallIntegerField(default=0)),
                ('position', models.PositiveIntegerField(default=0)),
                ('prev_position', models.PositiveIntegerField(default=0)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bingo.league')),
                ('user_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
            options={
                'db_table': 'league_standings',
            },
        ),
        migrations.AddConstraint(
            model_name='usergame',
            constraint=models.UniqueConstraint(fields=('user', 'game'), name='one user_game per user'),
        ),
        migrations.AddConstraint(
            model_name='leaguestandings',
            constraint=models.UniqueConstraint(fields=('league', 'user_name'), name='unique user entry per league'),
        ),
    ]
